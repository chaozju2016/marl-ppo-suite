[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "marl-ppo-suite"
version = "0.1.0"
description = "A collection of clean, documented, and straightforward implementations of PPO-based algorithms for cooperative multi-agent reinforcement learning"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Dmitri Manajev", email = "dmitri.manajev@protonmail.com"}
]
keywords = ["reinforcement-learning", "multi-agent", "ppo", "mappo", "happo", "starcraft", "smac"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "numpy>=2.2.2",
    "torch>=2.0.0",
    "gymnasium>=1.0.0",
    "cloudpickle>=2.2.0",
    "imageio",
    "imageio-ffmpeg",
    "matplotlib",
    "pandas",
    "tensorboard",
    "tqdm",
    "wandb",
    "pysc2>=3.0.0",
    "python-dotenv",
    "ray",
    "jinja2",
    "huggingface-hub",
    "python-dateutil",
    # SMAC environments need to be installed separately:
    # pip install git+https://github.com/oxwhirl/smac.git
    # pip install git+https://github.com/oxwhirl/smacv2.git
]

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "black",
    "isort",
    "flake8",
    "mypy",
]
cloud = [
    "docker",
    "docker-compose",
]

[project.urls]
"Homepage" = "https://github.com/legalaspro/marl-ppo-suite"
"Bug Tracker" = "https://github.com/legalaspro/marl-ppo-suite/issues"
"Documentation" = "https://github.com/legalaspro/marl-ppo-suite"
"Source Code" = "https://github.com/legalaspro/marl-ppo-suite"
"W&B Benchmarks" = "https://api.wandb.ai/links/legalaspro-rl/agvdrt35"

[project.scripts]
marl-train = "train:main"
marl-light-train = "light_train:main"
marl-wandb-download = "wandb_download:main"

[tool.setuptools]
packages = ["algos", "buffers", "cloud", "envs", "networks", "runners", "utils"]
py-modules = ["train", "light_train", "wandb_download", "push_to_hf"]

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
